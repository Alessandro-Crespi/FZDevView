{"version":3,"sources":["components/my_modal/index.js","pages/dashboard/account/home/sections/info_section.js"],"names":["MyModal","props","children","open","closeFuntion","closeFunction","Modal","onClose","closeAfterTransition","BackdropProps","timeout","className","InfoSection","user","useState","showCodeGeneration","setShowCodeGeneration","assignableRoles","setAssignableRoles","popupStatus","setPopupStatus","selectedRoles","useRef","anchorEl","setAnchorEl","createdCodesLoaded","contentEdited","setContentEdited","openRoles","setOpenRoles","openFields","setOpenFields","openStatistics","setOpenStatistics","a","getAllRoles","list","useEffect","current","canI","createRoleList","getCreatedCodesFromServer","getInterestsField","loadFields","loadUserFieldsOfInterest","document","getElementById","style","overflow","scrollTop","id","fontSize","getSurname","getName","getUsername","Chip","label","onClick","Row","Col","md","TextField","margin","fullWidth","multiline","variant","value","onChange","e","setName","target","getEmail","contentEditable","setEmail","type","setSurname","InputLabelProps","shrink","getBirthday","setBirthday","putInfo","Object","values","getRole","map","item","includes","FormGroup","FormControlLabel","control","Checkbox","indexOf","splice","push","generateCode","then","data","catch","message","console","log","getCodiceInvito","IconButton","navigator","clipboard","writeText","getCreatedCodes","code","usages","onMouseEnter","currentTarget","onMouseLeave","Popover","sx","pointerEvents","anchorOrigin","vertical","horizontal","transformOrigin","disableRestoreFocus","deleteCode","error","placeholder","setCodiceInvito","redeemCode","refreshing","keys","length","isError","removeFunction","Fade","in","Box","Typography","component","mt","color","background","fontWeight","getFieldOfInterest","field","getUserInterests","getId","removeUserFieldOfInterest","addUserFieldOfInterest","changeUserInterests","Grow","getLeague","getXP","getConsecutiveDaysJoin"],"mappings":"0YA8BeA,MAxBf,SAAiBC,GACf,IAAIC,EAAWD,EAAMC,SACjBC,EAAOF,EAAME,KACbC,EAAeH,EAAMI,cAEzB,OACI,cAACC,EAAA,EAAD,CACE,kBAAgB,yBAChB,mBAAiB,+BACjBH,KAAMA,EACNI,QAASH,EACTI,sBAAoB,EACpBC,cAAe,CACXC,QAAS,KAEbC,UAAU,WATZ,SAWI,qBAAKA,UAAU,kBAAf,SACGT,O,SCiWEU,UAtWf,SAAqBX,GACjB,IAAIY,EAAOZ,EAAMY,KACjB,EAAoDC,oBAAS,GAA7D,mBAAOC,EAAP,KAA2BC,EAA3B,KACA,EAA8CF,mBAAS,IAAvD,mBAAOG,EAAP,KAAwBC,EAAxB,KACA,EAAsCJ,mBAAS,IAA/C,mBAAOK,EAAP,KAAoBC,EAApB,KACMC,EAAgBC,iBAAO,IAC7B,EAAgCR,mBAAS,MAAzC,mBAAOS,EAAP,KAAiBC,EAAjB,KACMC,EAAqBH,kBAAO,GAClC,EAA0CR,oBAAS,GAAnD,mBAAOY,EAAP,KAAsBC,EAAtB,KACA,EAAkCb,oBAAS,GAA3C,mBAAOc,EAAP,KAAkBC,EAAlB,KACA,EAAoCf,oBAAS,GAA7C,mBAAOgB,GAAP,KAAmBC,GAAnB,KACA,GAA4CjB,oBAAS,GAArD,qBAAOkB,GAAP,MAAuBC,GAAvB,MAXwB,8CAaxB,4BAAAC,EAAA,sEACqBrB,EAAKsB,cAD1B,OACQC,EADR,OAEIlB,EAAmBkB,GAFvB,4CAbwB,sBAgExB,OAnBAC,qBAAU,WACFZ,EAAmBa,UAChBzB,GAAQA,EAAK0B,KAAK,mBA/CL,oCAgDZC,GACA3B,EAAK4B,6BAET5B,EAAK6B,oBAAoBC,aACzB9B,EAAK6B,oBAAoBE,2BACzBnB,EAAmBa,SAAU,KAElC,CAACzB,IAEJwB,qBAAU,WACaQ,SAASC,eAAe,qBAAqBC,MAAMC,SAAnEhB,GAA8E,SACd,GACnEa,SAASC,eAAe,qBAAqBG,UAAY,IAC1D,CAACjB,KAGG,sBAAKkB,GAAG,eAAR,UACH,8CACA,sBAAKvC,UAAU,sBAAf,UACI,8BACI,qBAAKA,UAAU,mBAAf,SACI,qBAAIoC,MAAO,CAAEI,SAAU,SAAvB,UAAkCtC,EAAKuC,aAAa,GAAIvC,EAAKwC,UAAU,UAG/E,sBAAK1C,UAAU,eAAf,UACI,qBAAIA,UAAU,OAAd,UAAsBE,GAAQA,EAAKuC,aAAnC,IAAkDvC,GAAQA,EAAKwC,aAC/D,mBAAG1C,UAAU,gBAAb,SAA8BE,GAAQA,EAAKyC,gBAC3C,sBAAK3C,UAAU,GAAf,UACI,cAAC4C,EAAA,EAAD,CAAMC,MAAM,QAAQ7C,UAAU,iBAAiB8C,QAAS,kBAAM5B,GAAa,MAC3E,cAAC0B,EAAA,EAAD,CAAMC,MAAM,oBAAoB7C,UAAU,UAAU8C,QAAS,kBAAM1B,IAAc,MACjF,cAACwB,EAAA,EAAD,CAAMC,MAAM,cAAc7C,UAAU,UAAU8C,QAAS,kBAAMxB,IAAkB,eAI3F,eAACyB,EAAA,EAAD,CAAK/C,UAAU,OAAf,UACI,eAACgD,EAAA,EAAD,CAAKC,GAAG,IAAR,UACI,cAACC,EAAA,EAAD,CACIlD,UAAU,WACVmD,OAAO,SACPC,WAAW,EACXC,WAAW,EACXR,MAAM,OACNS,QAAQ,WACRC,MAAOrD,GAAQA,EAAKwC,UACpBc,SAAU,SAACC,GACPvD,GAAQA,EAAKwD,QAAQD,EAAEE,OAAOJ,OAC9BvC,GAAiB,MAEzB,cAACkC,EAAA,EAAD,CACIlD,UAAU,WACVmD,OAAO,SACPC,WAAW,EACXC,WAAW,EACXR,MAAM,QACNS,QAAQ,WACRC,MAAOrD,GAAQA,EAAK0D,WACpBC,iBAAiB,EACjBL,SAAU,SAACC,GACPvD,GAAQA,EAAK4D,SAASL,EAAEE,OAAOJ,OAC/BvC,GAAiB,SAG7B,eAACgC,EAAA,EAAD,CAAKC,GAAG,IAAR,UACI,cAACC,EAAA,EAAD,CACIlD,UAAU,WACVmD,OAAO,SACPC,WAAW,EACXC,WAAW,EACXR,MAAM,UACNS,QAAQ,WACRS,KAAK,OACLR,MAAOrD,GAAQA,EAAKuC,aACpBe,SAAU,SAACC,GACPvD,GAAQA,EAAK8D,WAAWP,EAAEE,OAAOJ,OACjCvC,GAAiB,MAEzB,cAACkC,EAAA,EAAD,CACIlD,UAAU,WACVmD,OAAO,SACPC,WAAW,EACXP,MAAM,aACNS,QAAQ,WACRS,KAAK,OACLE,gBAAiB,CACbC,QAAQ,GAEZX,MAAOrD,GAAQA,EAAKiE,cACpBX,SAAU,SAACC,GACPvD,GAAQA,EAAKkE,YAAYX,EAAEE,OAAOJ,OAClCvC,GAAiB,YAK7BD,EACI,qBAAKf,UAAU,WAAf,SACI,wBAAQA,UAAU,aAAa8C,QAAS,WACpC5C,GAAQA,EAAKmE,UACbrD,GAAiB,IAFrB,qBAKR,GAEJ,cAACgC,EAAA,EAAD,UACI,sBAAKhD,UAAU,iBAAf,UACI,iDACA,+QACA,uBACA,eAAC+C,EAAA,EAAD,WAEQuB,OAAOC,OAAOrE,EAAKsE,WAAWC,KAAI,SAAAC,GAAI,OAAIA,EAAI,QAAUC,SAAS,eACjE,eAAC3B,EAAA,EAAD,CAAKC,GAAG,IAAR,UACI,gDACA,cAAC2B,EAAA,EAAD,UAEQtE,EAAgBmE,KAAI,SAAAC,GAAI,MACJ,eAAhBA,EAAI,KACJ,cAACG,EAAA,EAAD,CACAC,QAAS,cAACC,EAAA,EAAD,CACG/E,UAAU,cACVwD,SAAU,WACH9C,EAAciB,QAAQqD,QAAQN,EAAI,OAAa,EAC9ChE,EAAciB,QAAQsD,OAAOvE,EAAciB,QAAQqD,QAAQN,EAAI,MAAW,GAE1EhE,EAAciB,QAAQuD,KAAKR,EAAI,SAEnD7B,MAAO6B,EAAI,OACX,QAIZ,wBAAQ1E,UAAU,SAAS8C,QAAS,WAhKxD5C,EAAKiF,aAAazE,EAAciB,SACrByD,MAAK,SAAAC,GAAI,OAAIhF,GAAsB,MACnCiF,OAAM,SAACC,GAAD,OAAaC,QAAQC,IAAIF,OA8JtB,2BACA,uBAEInF,EACA,mCACI,eAAC4C,EAAA,EAAD,CAAKC,GAAG,IAAIjD,UAAU,sBAAtB,UACI,cAACkD,EAAA,EAAD,CACIlD,UAAU,WACVmD,OAAO,SACPC,WAAW,EACXC,WAAW,EACXR,MAAM,SACNS,QAAQ,WACRO,iBAAiB,EACjBN,MAAOrD,GAAQA,EAAKwF,oBACxB,qBAAK1F,UAAU,eAAf,SACI,cAAC2F,EAAA,EAAD,UACI,cAAC,IAAD,CAAiB3F,UAAU,cAAc8C,QAAS,kBAAM8C,UAAUC,UAAUC,UAAU5F,GAAQA,EAAKwF,+BAKnH,MAGR,GAGCpB,OAAOC,OAAOrE,EAAKsE,WAAWC,KAAI,SAAAC,GAAI,OAAIA,EAAI,QAAUC,SAAS,eAUlE,eAAC3B,EAAA,EAAD,CAAKC,GAAG,IAAR,UACI,kDAEI/C,GAAQA,EAAK6F,kBAAkBtB,KAAI,SAACuB,GAAD,OACf,IAAZ,OAAJA,QAAI,IAAJA,OAAA,EAAAA,EAAMC,QACN,sBAAKjG,UAAU,iBAAf,UACI,cAACkD,EAAA,EAAD,CACIlD,UAAU,WACVmD,OAAO,SACPC,WAAW,EACXC,WAAW,EACXR,MAAM,SACNS,QAAQ,WACRO,iBAAiB,EACjBN,MAAOyC,EAAI,OACf,qBAAKhG,UAAU,eAAf,SACI,cAAC2F,EAAA,EAAD,UACI,cAAC,IAAD,CAAiB3F,UAAU,cAAc8C,QAAS,kBAAM8C,UAAUC,UAAUC,UAAUE,EAAI,aAGlG,sBAAKhG,UAAU,eAAf,UACI,cAAC2F,EAAA,EAAD,CACApD,GAAIyD,EAAI,KACRE,aAAc,SAACzC,GAAD,OAAO5C,EAAY4C,EAAE0C,gBACnCC,aAAc,kBAAMvF,EAAY,OAHhC,SAII,cAAC,IAAD,CAAUb,UAAU,kBAExB,cAACqG,EAAA,EAAD,CACI9D,GAAG,qBACH/C,MAAc,OAARoB,QAAQ,IAARA,OAAA,EAAAA,EAAU2B,KAAMyD,EAAI,KAC1BpF,SAAUA,EACV0F,GAAI,CACAC,cAAe,QAEnBC,aAAc,CACdC,SAAU,SACVC,WAAY,QAEZC,gBAAiB,CACjBF,SAAU,MACVC,WAAY,QAEZ9G,QAAS,kBAAMiB,EAAY,OAC3B+F,qBAAmB,EAhBvB,SAkBI,4BAAIZ,EAAI,aAGhB,qBAAKhG,UAAU,eAAf,SACI,cAAC2F,EAAA,EAAD,UACI,cAAC,IAAD,CACA3F,UAAU,cACV8C,QAAS,kBAAM5C,EAAK2G,WAAWb,EAAI,MACnBZ,MAAK,kBAAM3E,EAAe,CAACqG,OAAO,EAAOvB,QAAS,+BAClDD,OAAM,kBAAM7E,EAAe,CAACqG,OAAO,EAAMvB,QAAS,wBAI9E,SAnEZ,eAACvC,EAAA,EAAD,WACI,gDACA,uBACIhD,UAAU,QACV+G,YAAY,YACZxD,MAAOrD,GAAQA,EAAKwF,kBACpBlC,SAAU,SAACC,GAAD,OAAOvD,GAAQA,EAAK8G,gBAAgBvD,EAAEE,OAAOJ,UAC3D,wBAAQvD,UAAU,iBAAiB8C,QAAS,WA9L7D5C,GACCA,EAAK+G,aAAa7B,MAAK,kBAAMlF,EAAKgH,aAAa9B,MAAK,WAChDlF,EAAK8G,gBAAgB,IACrB9F,GAAa,SAEhBoE,OAAM,SAAC7B,GACJ+B,QAAQC,IAAIhC,GACZhD,EAAe,CAACqG,OAAO,EAAMvB,QAAS,0BAuL1B,+BAqEhBjB,OAAO6C,KAAK3G,GAAa4G,OACzB,cAAC,IAAD,CAAOC,QAAS7G,EAAW,MAAW+E,QAAS/E,EAAW,QAAa8G,eAAgB,kBAAM7G,EAAe,OAC5G,GAIJ,cAAC,EAAD,CAASjB,KAAMyB,EAAWvB,cAAe,kBAAMwB,GAAa,IAA5D,SACI,cAACqG,EAAA,EAAD,CAAMC,GAAIvG,EAAV,SACI,eAACwG,EAAA,EAAD,CAAKzH,UAAU,oBAAf,UACI,cAAC0H,EAAA,EAAD,CAAYnF,GAAG,yBAAyBe,QAAQ,KAAKqE,UAAU,KAAK3H,UAAU,cAA9E,0BAGA,uBACA,cAAC0H,EAAA,EAAD,CAAYnF,GAAG,+BAA+B+D,GAAI,CAAEsB,GAAI,GAAxD,SACE1H,GAAQA,EAAKsE,UAAUC,KAAI,SAAAC,GAAI,OAAI,cAAC9B,EAAA,EAAD,CAAMC,MAAO6B,EAAI,KAAUtC,MAAO,CAAEyF,MAAO,QAASC,WAAY,uBAAwB3E,OAAQ,UAErI,uBACA,cAAC,IAAD,CAAWnD,UAAU,cAAc8C,QAAS,kBAAM5B,GAAa,aAM3E,cAAC,EAAD,CAAS1B,KAAM2B,GAAYzB,cAAe,kBAAM0B,IAAc,IAA9D,SACI,cAACmG,EAAA,EAAD,CAAMC,GAAIrG,GAAV,SACI,8BACI,eAAC6B,EAAA,EAAD,CAAKC,GAAG,IAAIjD,UAAU,UAAtB,UACI,0DACA,mBAAGoC,MAAO,CAAE2F,WAAY,KAAxB,+CAEI7H,GAAQA,EAAK6B,oBAAoBiG,qBAAqBvD,KAAI,SAAAwD,GAAK,OAC3D,cAACrF,EAAA,EAAD,CAAMC,MAAOoF,EAAMvF,UAAW1C,UAAW,WAAaE,EAAK6B,oBAAoBmG,mBAAmBvD,SAASsD,EAAME,SAAW,UAAY,IAAKrF,QAAS,kBAtRlL,SAA6BmF,GACtB/H,EAAK6B,oBAAoBmG,mBAAmBvD,SAASsD,EAAME,SAC1DjI,EAAK6B,oBAAoBqG,0BAA0BH,EAAME,SAEzDjI,EAAK6B,oBAAoBsG,uBAAuBJ,EAAME,SAkR0HG,CAAoBL,kBASxM,cAACM,EAAA,EAAD,CAAMf,GAAInG,GAAV,SACI,sBAAKkB,GAAG,aAAavC,UAAU,uBAA/B,UACI,cAAC,IAAD,CAAWA,UAAU,eAAe8C,QAAS,kBAAMxB,IAAkB,MACrE,oBAAItB,UAAU,WAAd,yBACA,oBAAIA,UAAU,QAAd,SAAuBE,GAAQA,EAAKsI,cACpC,uBACA,uBACA,uBACA,uBACA,eAACzF,EAAA,EAAD,WACI,eAACC,EAAA,EAAD,CAAKC,GAAG,IAAIjD,UAAU,WAAtB,UACI,oBAAIA,UAAU,kBAAd,gBACA,oBAAIA,UAAU,eAAd,SAA8BE,GAAQA,EAAKuI,aAE/C,cAACzF,EAAA,EAAD,CAAKC,GAAG,MACR,eAACD,EAAA,EAAD,CAAKC,GAAG,IAAIjD,UAAU,WAAtB,UACI,oBAAIA,UAAU,kBAAd,gCACA,oBAAIA,UAAU,eAAd,SAA8BE,GAAQA,EAAKwI,iCAGnD,gCACI,qBAAK1I,UAAU,oBACf,qBAAKA,UAAU,oBACf,qBAAKA,UAAU,sBACf,qBAAKA,UAAU,qBACf,qBAAKA,UAAU","file":"static/js/7.9e9d1eb8.chunk.js","sourcesContent":["import React from 'react'\nimport { Modal } from '@material-ui/core'\n\nimport \"./style.css\"\n\n\nfunction MyModal(props) {\n  let children = props.children\n  let open = props.open\n  let closeFuntion = props.closeFunction\n\n  return (\n      <Modal\n        aria-labelledby=\"transition-modal-title\"\n        aria-describedby=\"transition-modal-description\"\n        open={open}\n        onClose={closeFuntion}\n        closeAfterTransition\n        BackdropProps={{\n            timeout: 500,\n        }}\n        className=\"centered\"\n        >\n          <div className=\"modal_container\">\n            {children}\n          </div>\n        </Modal>\n  )\n}\n\nexport default MyModal","import React, {useState, useEffect, useRef} from 'react'\nimport { TextField } from '@mui/material'\nimport ContentCopyIcon from '@mui/icons-material/ContentCopy';\nimport { IconButton } from '@mui/material';\nimport {Row, Col} from \"react-bootstrap\"\nimport { FormGroup, FormControlLabel, Checkbox } from '@mui/material';\nimport Popup from '../../../../../components/popup';\nimport Modal from '@mui/material/Modal';\nimport InfoIcon from '@mui/icons-material/Info';\nimport Popover from '@mui/material/Popover';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport Box from '@mui/material/Box';\nimport Fade from '@mui/material/Fade';\nimport Typography from '@mui/material/Typography';\nimport Chip from '@mui/material/Chip';\nimport CloseIcon from '@mui/icons-material/Close';\nimport MyModal from '../../../../../components/my_modal';\nimport { Grow } from '@material-ui/core';\n\nfunction InfoSection(props) {\n    let user = props.user\n    const [showCodeGeneration, setShowCodeGeneration] = useState(false)\n    const [assignableRoles, setAssignableRoles] = useState([])\n    const [popupStatus, setPopupStatus] = useState({})   \n    const selectedRoles = useRef([])\n    const [anchorEl, setAnchorEl] = useState(null) // popover(code roles)\n    const createdCodesLoaded = useRef(false)\n    const [contentEdited, setContentEdited] = useState(false) // update user info\n    const [openRoles, setOpenRoles] = useState(false) // used on redeem_code\n    const [openFields, setOpenFields] = useState(false)\n    const [openStatistics, setOpenStatistics] = useState(false)\n\n    async function createRoleList() {\n        let list = await user.getAllRoles()\n        setAssignableRoles(list)\n    }\n\n    function manageCodeGeneration() {\n        user.generateCode(selectedRoles.current)\n                  .then(data => setShowCodeGeneration(true))\n                  .catch((message) => console.log(message))\n    }\n\n    function redeemCode() {\n        if(user) {\n            user.redeemCode().then(() => user.refreshing().then(() => {\n                user.setCodiceInvito(\"\")\n                setOpenRoles(true)\n            }))\n            .catch((e) => {\n                console.log(e);\n                setPopupStatus({error: true, message: \"Codice non valido\"})\n            })\n        }\n    }\n\n    function changeUserInterests(field) {\n        if(user.getInterestsField().getUserInterests().includes(field.getId())) {\n            user.getInterestsField().removeUserFieldOfInterest(field.getId())\n        } else {\n            user.getInterestsField().addUserFieldOfInterest(field.getId())\n        }\n    }\n\n    useEffect(() => {\n        if(!createdCodesLoaded.current) {\n            if(user && user.canI(\"manage_roles\")) {\n                createRoleList()\n                user.getCreatedCodesFromServer()\n            }\n            user.getInterestsField().loadFields()\n            user.getInterestsField().loadUserFieldsOfInterest()\n            createdCodesLoaded.current = true\n        }\n    }, [user])\n\n    useEffect(() => {\n        if(openStatistics) document.getElementById('content_container').style.overflow = \"hidden\"\n        else document.getElementById('content_container').style.overflow = \"\"\n        document.getElementById(\"content_container\").scrollTop = 0\n    }, [openStatistics])\n    \n\n    return <div id=\"info_section\">\n        <h2>Informazioni</h2>\n        <div className=\"display_inline mt-3\">\n            <div>\n                <div className=\"avatar_container\">\n                    <h1 style={{ fontSize: \"100px\"}}>{user.getSurname()[0]}{user.getName()[0]}</h1>\n                </div>    \n            </div>\n            <div className=\"m-3 centered\">\n                <h4 className=\"name\">{user && user.getSurname()} {user && user.getName()}</h4>\n                <p className=\"username thin\">{user && user.getUsername()}</p>\n                <div className=\"\">\n                    <Chip label=\"Ruoli\" className=\"my_chip bounce\" onClick={() => setOpenRoles(true)}/>\n                    <Chip label=\"Campi d'interesse\" className=\"my_chip\" onClick={() => setOpenFields(true)}/>\n                    <Chip label=\"Statistiche\" className=\"my_chip\" onClick={() => setOpenStatistics(true)}/>\n                </div>\n            </div>\n        </div>\n        <Row className=\"mt-3\">\n            <Col md=\"6\">\n                <TextField\n                    className=\"my_input\"\n                    margin=\"normal\"\n                    fullWidth={true}\n                    multiline={true}\n                    label=\"Nome\"\n                    variant=\"outlined\"\n                    value={user && user.getName()}\n                    onChange={(e) => {\n                        user && user.setName(e.target.value)\n                        setContentEdited(true)\n                    }}/>\n                <TextField\n                    className=\"my_input\"\n                    margin=\"normal\"\n                    fullWidth={true}\n                    multiline={true}\n                    label=\"Email\"\n                    variant=\"outlined\"\n                    value={user && user.getEmail()}\n                    contentEditable={false}\n                    onChange={(e) => {\n                        user && user.setEmail(e.target.value)\n                        setContentEdited(true)\n                    }}/>\n            </Col>\n            <Col md=\"6\">\n                <TextField\n                    className=\"my_input\"\n                    margin=\"normal\"\n                    fullWidth={true}\n                    multiline={true}\n                    label=\"Cognome\"\n                    variant=\"outlined\"\n                    type=\"date\"\n                    value={user && user.getSurname()}\n                    onChange={(e) => {\n                        user && user.setSurname(e.target.value)\n                        setContentEdited(true)\n                    }}/>\n                <TextField\n                    className=\"my_input\"\n                    margin=\"normal\"\n                    fullWidth={true}\n                    label=\"Compleanno\"\n                    variant=\"outlined\"\n                    type=\"date\"\n                    InputLabelProps={{\n                        shrink: true,\n                      }}\n                    value={user && user.getBirthday()}\n                    onChange={(e) => {\n                        user && user.setBirthday(e.target.value)\n                        setContentEdited(true)\n                    }}/>\n            </Col>\n        </Row>\n        {\n            contentEdited ?\n                <div className=\"centered\">\n                    <button className=\"button m-3\" onClick={() => {\n                        user && user.putInfo()\n                        setContentEdited(false)\n                    }}>Salva</button>\n                </div> :\n            \"\"\n        }\n        <Col>\n            <div className=\"block mt-3 p-4\">\n                <h3>Codice d'invito</h3>\n                <p>Lorem Ipsum è un testo segnaposto utilizzato nel settore della tipografia e della stampa. Lorem Ipsum è considerato il testo segnaposto standard sin dal sedicesimo secolo, quando un anonimo tipografo prese una cassetta di caratteri.</p>\n                <br/>\n                <Row>\n                    {\n                        Object.values(user.getRole()).map(item => item['slug']).includes(\"super-admin\") ?\n                        <Col md=\"6\">\n                            <h6>Scegli i ruoli</h6>\n                            <FormGroup>\n                                {\n                                    assignableRoles.map(item => \n                                        item['slug'] != \"super-admin\" ?\n                                        <FormControlLabel\n                                        control={<Checkbox \n                                                    className=\"orange_icon\"\n                                                    onChange={() => {\n                                                        if(selectedRoles.current.indexOf(item['slug']) > -1) \n                                                            selectedRoles.current.splice(selectedRoles.current.indexOf(item['slug']), 1)\n                                                        else\n                                                            selectedRoles.current.push(item['slug'])\n                                                    }}/>}\n                                        label={item['name']} /> : \n                                        \"\"\n                                    )\n                                }\n                            </FormGroup>\n                            <button className=\"button\" onClick={() => manageCodeGeneration()}>Genera codice</button>\n                            <br/>\n                            {\n                                showCodeGeneration ?\n                                <>\n                                    <Col md=\"6\" className=\"display_inline mb-3\">\n                                        <TextField\n                                            className=\"my_input\"\n                                            margin=\"normal\"\n                                            fullWidth={true}\n                                            multiline={true}\n                                            label=\"Titolo\"\n                                            variant=\"outlined\"\n                                            contentEditable={false}\n                                            value={user && user.getCodiceInvito()}/>\n                                        <div className=\"centered m-2\">\n                                            <IconButton>\n                                                <ContentCopyIcon className=\"orange_icon\" onClick={() => navigator.clipboard.writeText(user && user.getCodiceInvito())}/>\n                                            </IconButton>\n                                        </div>\n                                    </Col>\n                                </> : \n                                \"\"\n                            }\n                        </Col> : \n                        \"\"\n                    }\n                    {\n                        !Object.values(user.getRole()).map(item => item['slug']).includes(\"super-admin\") ? \n                        <Col>\n                            <h6>Hai un codice?</h6>\n                            <input\n                                className=\"input\"\n                                placeholder=\"Codice...\"\n                                value={user && user.getCodiceInvito()}\n                                onChange={(e) => user && user.setCodiceInvito(e.target.value)}/>\n                            <button className=\"button mx-auto\" onClick={() => redeemCode()}>Attiva</button>\n                        </Col> : \n                        <Col md=\"6\">\n                            <h6>Codici non usati</h6>\n                            {\n                                user && user.getCreatedCodes().map((code) => (\n                                    code?.usages == 0 ? \n                                    <div className=\"display_inline\">\n                                        <TextField\n                                            className=\"my_input\"\n                                            margin=\"normal\"\n                                            fullWidth={true}\n                                            multiline={true}\n                                            label=\"Titolo\"\n                                            variant=\"outlined\"\n                                            contentEditable={false}\n                                            value={code['code']}/>\n                                        <div className=\"centered m-2\">\n                                            <IconButton>\n                                                <ContentCopyIcon className=\"orange_icon\" onClick={() => navigator.clipboard.writeText(code['code'])}/>\n                                            </IconButton>\n                                        </div>\n                                        <div className=\"centered m-2\">\n                                            <IconButton\n                                            id={code['code']}\n                                            onMouseEnter={(e) => setAnchorEl(e.currentTarget)}\n                                            onMouseLeave={() => setAnchorEl(null)}>\n                                                <InfoIcon className=\"orange_icon\"/>\n                                            </IconButton>\n                                            <Popover\n                                                id=\"mouse-over-popover\"\n                                                open={anchorEl?.id == code['code']}\n                                                anchorEl={anchorEl}\n                                                sx={{\n                                                    pointerEvents: 'none',\n                                                  }}\n                                                anchorOrigin={{\n                                                vertical: 'bottom',\n                                                horizontal: 'left',\n                                                }}\n                                                transformOrigin={{\n                                                vertical: 'top',\n                                                horizontal: 'left',\n                                                }}\n                                                onClose={() => setAnchorEl(null)}\n                                                disableRestoreFocus\n                                            >\n                                                <p>{code['roles']}</p>\n                                            </Popover>\n                                        </div>\n                                        <div className=\"centered m-2\">\n                                            <IconButton>\n                                                <DeleteIcon\n                                                className=\"orange_icon\"\n                                                onClick={() => user.deleteCode(code['code'])\n                                                               .then(() => setPopupStatus({error: false, message: \"Eliminazione completata\"}))\n                                                               .catch(() => setPopupStatus({error: true, message: \"Errore\"}))}/>\n                                            </IconButton>\n                                        </div>\n                                    </div> : \n                                    \"\"\n                                ))\n                            }\n                        </Col>\n                    }\n                </Row>\n            </div>\n        </Col>\n        {\n            Object.keys(popupStatus).length ?\n            <Popup isError={popupStatus['error']} message={popupStatus['message']} removeFunction={() => setPopupStatus({})}/> :\n            \"\"\n        }\n\n        {/* ROLES */}\n        <MyModal open={openRoles} closeFunction={() => setOpenRoles(false)}>\n            <Fade in={openRoles}>\n                <Box className=\"modal_redeem_code\">\n                    <Typography id=\"transition-modal-title\" variant=\"h4\" component=\"h1\" className=\"text-center\">\n                    I tuoi Ruoli\n                    </Typography>\n                    <br/>\n                    <Typography id=\"transition-modal-description\" sx={{ mt: 2 }}>\n                    { user && user.getRole().map(item => <Chip label={item['slug']} style={{ color: \"white\", background: \"var(--details_color)\", margin: 2}}/>) }\n                    </Typography>\n                    <br/>\n                    <CloseIcon className=\"close_modal\" onClick={() => setOpenRoles(false)}/>\n                </Box>\n            </Fade>\n        </MyModal>\n\n        {/* FIELDS OF INTEREST */}\n        <MyModal open={openFields} closeFunction={() => setOpenFields(false)}>\n            <Fade in={openFields}>\n                <div>\n                    <Col md=\"8\" className=\"mx-auto\">\n                        <h1>I tuoi campi d'interesse</h1>\n                        <p style={{ fontWeight: 200}}>Modificali in base ai tuoi gusti!</p>\n                        {\n                            user && user.getInterestsField().getFieldOfInterest().map(field => (\n                                <Chip label={field.getName()} className={\"my_chip\" + (user.getInterestsField().getUserInterests().includes(field.getId()) ? \" orange\" : \"\")} onClick={() => changeUserInterests(field)}/>\n                            ))\n                        }\n                    </Col>\n                </div>\n            </Fade>\n        </MyModal>\n\n        {/* STATISTICS */}\n        <Grow in={openStatistics}>    \n            <div id=\"statistics\" className=\"text-center centered\">\n                <CloseIcon className=\"close bounce\" onClick={() => setOpenStatistics(false)}/>\n                <h5 className=\"subtitle\">LA TUA LEGA</h5>\n                <h1 className=\"title\">{user && user.getLeague()}</h1>\n                <br/>\n                <br/>\n                <br/>\n                <br/>\n                <Row>\n                    <Col md=\"4\" className=\"centered\">\n                        <h5 className=\"subtitle bounce\">XP</h5>\n                        <h1 className=\"title bounce\">{user && user.getXP()}</h1>\n                    </Col>\n                    <Col md=\"4\"></Col>\n                    <Col md=\"4\" className=\"centered\">\n                        <h5 className=\"subtitle bounce\">GIORNI CONSECUTIVI</h5>\n                        <h1 className=\"title bounce\">{user && user.getConsecutiveDaysJoin()}</h1>\n                    </Col>\n                </Row>\n                <div>\n                    <div className=\"ball one bounce\"></div>\n                    <div className=\"ball two bounce\"></div>\n                    <div className=\"ball three bounce\"></div>\n                    <div className=\"ball four bounce\"></div>\n                    <div className=\"ball five bounce\"></div>\n                </div>\n            </div> \n        </Grow>\n    </div>\n}\n\n\n\nexport default InfoSection"],"sourceRoot":""}