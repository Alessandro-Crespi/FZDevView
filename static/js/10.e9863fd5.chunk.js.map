{"version":3,"sources":["../node_modules/@mui/icons-material/AddCircle.js","controllers/login_questions_controller.js","pages/dashboard/account/home/sections/question_section.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_createSvgIcon","_jsxRuntime","_default","jsx","d","LoginQuestionController","list","state","undefined","overrideState","this","updateInfo","newQuestion","QuestionCreationController","id","getList","length","setOverrideState","bind","question","setId","push","item","index","indexOf","splice","QuestionSection","useState","content","setContent","useEffect","setState","addQuestion","className","onDragEnd","result","source","reorderedItem","destination","setList","droppableId","provided","droppableProps","ref","innerRef","map","i","draggableId","toString","innerProvided","draggableProps","dragHandleProps","getId","onClick","removeQuestion","placeholder"],"mappings":"iHAEA,IAAIA,EAAyBC,EAAQ,IAErCC,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQE,aAAU,EAElB,IAAIC,EAAiBP,EAAuBC,EAAQ,KAEhDO,EAAcP,EAAQ,GAEtBQ,GAAW,EAAIF,EAAeD,UAAuB,EAAIE,EAAYE,KAAK,OAAQ,CACpFC,EAAG,yGACD,aAEJP,EAAQE,QAAUG,G,0GCfZG,E,WACF,aAAsE,IAA1DC,EAAyD,uDAAlD,GAAIC,EAA8C,4DAAtCC,EAAWC,EAA2B,4DAAXD,EAAW,oBACjEE,KAAKJ,KAAOA,EACZI,KAAKH,MAAQA,EACbG,KAAKD,cAAgBA,E,4CAIzB,SAASF,GACLG,KAAKH,MAAQA,EACbG,KAAKC,e,8BAGT,SAAiBF,GACbC,KAAKD,cAAgBA,EACrBC,KAAKC,e,wBAGT,gBACqBH,GAAdE,KAAKH,MACJG,KAAKH,MAAM,IAAIF,EAAwBK,KAAKJ,KAAMI,KAAKH,MAAOG,KAAKD,qBACzCD,GAAtBE,KAAKD,eACTC,KAAKD,kB,qBAIb,WAAY,OAAOC,KAAKJ,O,qBAGxB,SAAQA,GACJI,KAAKJ,KAAOA,EACZI,KAAKC,e,yBAIT,WAAe,IAAD,OACNC,EAAc,IAAIC,IAClBC,EAAKJ,KAAKK,UAAUC,OAAS,EACjCJ,EAAYK,iBAAkB,kBAAM,EAAKN,cAAcO,KAAKR,OAC5DE,EAAYO,SAASC,MAAMN,GAC3BJ,KAAKJ,KAAKe,KAAKT,GACfF,KAAKC,e,4BAGT,SAAeW,GACX,IAAIC,EAAQb,KAAKJ,KAAKkB,QAAQF,GAC9BZ,KAAKJ,KAAKmB,OAAOF,EAAM,GACvBb,KAAKC,iB,KAIEN,I,mDCoBAqB,UA9Df,WACE,MAA8BC,mBAAS,IAAItB,GAA3C,mBAAOuB,EAAP,KAAgBC,EAAhB,KAgBA,OAPAC,qBAAU,WACRF,EAAQG,SAASF,GACjBD,EAAQI,cACRJ,EAAQI,cACRJ,EAAQI,gBACP,IAGD,sBAAKlB,GAAG,mBAAR,UACI,yCACA,mBAAGmB,UAAU,OAAb,sDACA,cAAC,IAAD,CAAiBC,UAlBvB,SAAyBC,GACvB,IAAI7B,EAAOsB,EAAQb,UACnB,EAAwBT,EAAKmB,OAAOU,EAAOC,OAAOb,MAAO,GAAlDc,EAAP,oBACA/B,EAAKmB,OAAOU,EAAOG,YAAYf,MAAO,EAAGc,GACzCT,EAAQW,QAAQjC,IAcZ,SACE,cAAC,IAAD,CAAWkC,YAAY,OAAvB,SAEI,SAACC,GAAD,OACE,gDAASA,EAASC,gBAAlB,IAAkCC,IAAKF,EAASG,SAAhD,UAEIhB,GAAWA,EAAQb,UAAU8B,KAC3B,SAACvB,EAAMwB,GAAP,OACU,cAAC,IAAD,CAAmBC,YAAaD,EAAEE,WAAYzB,MAAOuB,EAArD,SAEI,SAACG,GAAD,OACM,4DAASA,EAAcC,gBAAoBD,EAAcE,iBAAzD,IAA0ER,IAAKM,EAAcL,SAAUX,UAAU,YAAjH,UACE,sBAAKA,UAAU,uBAAf,UACE,qBAAKA,UAAU,iBAAf,SAME,qBAAIA,UAAU,MAAd,qBAA6BX,EAAKH,SAASiC,aAE7C,cAAC,IAAD,CAAYC,QAAS,kBAAMzB,EAAQ0B,eAAehC,IAAOW,UAAU,mBAErE,cAAC,IAAD,CAAiBd,SAAUG,UAfvBwB,MAoB7BL,EAASc,qBAMpB,qBAAKtB,UAAU,WAAf,SACE,oBAAGoB,QAAS,kBAAMzB,EAAQI,eAA1B,UAAyC,cAAC,IAAD,CAAeC,UAAU,KAAlE","file":"static/js/10.e9863fd5.chunk.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm5 11h-4v4h-2v-4H7v-2h4V7h2v4h4v2z\"\n}), 'AddCircle');\n\nexports.default = _default;","import QuestionCreationController from \"./question_creation_controller\"\n\nclass LoginQuestionController {\n    constructor(list = [], state = undefined, overrideState = undefined) {\n        this.list = list\n        this.state = state\n        this.overrideState = overrideState\n    }\n\n    // state management\n    setState(state) {\n        this.state = state\n        this.updateInfo()\n    }\n\n    setOverrideState(overrideState) {\n        this.overrideState = overrideState\n        this.updateInfo()\n    }\n\n    updateInfo() {\n        if(this.state != undefined)\n            this.state(new LoginQuestionController(this.list, this.state, this.overrideState))\n        else if(this.overrideState != undefined)\n            this.overrideState()\n    }\n\n    // GET\n    getList() { return this.list}\n\n    // SET\n    setList(list) {\n        this.list = list\n        this.updateInfo()\n    }\n\n    // manage list\n    addQuestion() {\n        let newQuestion = new QuestionCreationController()\n        let id = this.getList().length + 1\n        newQuestion.setOverrideState((() => this.updateInfo()).bind(this))\n        newQuestion.question.setId(id)\n        this.list.push(newQuestion)\n        this.updateInfo()\n    }\n\n    removeQuestion(item) {\n        let index = this.list.indexOf(item)\n        this.list.splice(index,1)\n        this.updateInfo()\n    }\n}\n\nexport default LoginQuestionController","import React, { useState, useEffect } from 'react'\nimport QuestionCreator from '../../../../../components/question_creator'\nimport ScrollContainer from '../../../../../components/scroll_container'\nimport LoginQuestionController from '../../../../../controllers/login_questions_controller'\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { IconButton } from '@material-ui/core';\nimport ArrowDropUpIcon from '@mui/icons-material/ArrowDropUp';\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown';\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\"\n\nfunction QuestionSection() {\n  const [content, setContent] = useState(new LoginQuestionController())\n\n  function handleOnDragEnd(result) {\n    let list = content.getList()\n    const [reorderedItem] = list.splice(result.source.index, 1)\n    list.splice(result.destination.index, 0, reorderedItem)\n    content.setList(list)\n  }\n\n  useEffect(() => {\n    content.setState(setContent)\n    content.addQuestion()\n    content.addQuestion()\n    content.addQuestion()\n  }, [])\n  \n  return (\n    <div id=\"question_section\">\n        <h2>Domande</h2>\n        <p className=\"thin\">Crea e gestisci le domande d'iscrizione.</p>\n        <DragDropContext onDragEnd={handleOnDragEnd}>\n          <Droppable droppableId=\"list\">\n            {\n              (provided) => (\n                <div {...provided.droppableProps} ref={provided.innerRef}>\n                  {\n                    content && content.getList().map(\n                      (item, i) => \n                                <Draggable key={i} draggableId={i.toString()} index={i} >\n                                  {\n                                    (innerProvided) => \n                                          <div {...innerProvided.draggableProps} {...innerProvided.dragHandleProps} ref={innerProvided.innerRef} className=\"block m-3\">\n                                            <div className=\"space_between header\">\n                                              <div className=\"display_inline\">\n                                                {/* <div>\n                                                  <ArrowDropUpIcon className=\"orange_icon\"/>\n                                                  <br/>\n                                                  <ArrowDropDownIcon className=\"orange_icon\"/>\n                                                </div> */}\n                                                <h5 className=\"m-0\">Domanda {item.question.getId()}</h5>\n                                              </div>\n                                              <DeleteIcon onClick={() => content.removeQuestion(item)} className=\"orange_icon\"/>\n                                            </div>\n                                            <QuestionCreator question={item}/>\n                                          </div>\n                                  }\n                                </Draggable>\n                  )}\n                  {provided.placeholder}\n                </div>\n              )\n            }\n        </Droppable>\n        </DragDropContext>\n        <div className=\"centered\">\n          <p onClick={() => content.addQuestion()}><AddCircleIcon className=\"\"/> Aggiungi</p>\n        </div>\n    </div>\n  )\n}\n\nexport default QuestionSection"],"sourceRoot":""}